<routes xmlns="http://camel.apache.org/schema/spring">
<!-- Define the REST GET endpoint using Jetty -->
<route>
<!-- Expose a REST service using Jetty -->
<from uri="jetty:http://0.0.0.0:8080/myapp/api/{param1}/{param2}" />
<!-- Access the input parameters -->
<setBody>
<simple>
<![CDATA[
                    The value of param1 is ${header.param1} and the value of param2 is ${header.param2}
                ]]>
</simple>
</setBody>
 
        <!-- Send the response back to the client -->
<to uri="log:received?level=INFO" />
<to uri="stream:out" />
</route>
</routes>




<camelContext xmlns="http://camel.apache.org/schema/spring">
<!-- Configure the REST component -->
<restConfiguration component="jetty" host="0.0.0.0" port="8080" bindingMode="json" />
 
    <!-- Define the REST API route -->
<rest path="/api/process/{param1}/{param2}/{param3}">
<get>
<to uri="direct:processParams" />
</get>
</rest>
 
    <!-- Define the processing route -->
<route id="processParamsRoute">
<from uri="direct:processParams" />
<log message="Received parameters: param1 = ${header.param1}, param2 = ${header.param2}, param3 = ${header.param3}" />
<setBody>
<simple>Processed params: ${header.param1}, ${header.param2}, ${header.param3}</simple>
</setBody>
</route>
</camelContext>



<restConfiguration component="jetty" host="0.0.0.0" port="8080"/>

    <rest path="/myapp/api">
        <get uri="/{param1}/{param2}">
            <route>
                <from uri="rest:get:myapp/api/{param1}/{param2}" />
                <setBody>
                    <simple>
                        <![CDATA[
                            The value of param1 is ${header.param1} and the value of param2 is ${header.param2}
                        ]]>
                    </simple>
                </setBody>
                <to uri="log:received?level=INFO" />
                <to uri="stream:out" />
            </route>
        </get>
    </rest>


<simple>
                <![CDATA[
                {"actionable_entity_id_type": "Customertest"}
                ]]>
            </simple>
