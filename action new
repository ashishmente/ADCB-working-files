<routes xmlns="http://camel.apache.org/schema/spring">
    <!-- Define a direct HTTP endpoint using Jetty with path parameters -->
    <route id="directHttpRoute">
        <from uri="jetty:http://0.0.0.0:8080/process/{param1}/{param2}/{param3}"/>
        <log message="Received request with URL: ${header.CamelHttpUri}"/>
        
        <!-- Extract Path Parameters -->
        <setHeader name="param1">
            <simple>${header.param1}</simple>
        </setHeader>
        <setHeader name="param2">
            <simple>${header.param2}</simple>
        </setHeader>
        <setHeader name="param3">
            <simple>${header.param3}</simple>
        </setHeader>

        <log message="Extracted Parameters - Param1: ${header.param1}, Param2: ${header.param2}, Param3: ${header.param3}"/>

        <!-- Set JSON response -->
        <setBody>
            <simple>
                {"status": "success", "param1": "${header.param1}", "param2": "${header.param2}", "param3": "${header.param3}"}
            </simple>
        </setBody>
        
        <!-- Set response headers -->
        <setHeader name="Content-Type">
            <constant>application/json</constant>
        </setHeader>
    </route>
</routes>




import org.apache.camel.Exchange;
import org.springframework.stereotype.Component;
import com.fasterxml.jackson.databind.ObjectMapper;

import java.util.HashMap;
import java.util.Map;

@Component("jsonProcessor")
public class JsonProcessor {

    public void process(Exchange exchange) {
        String param1 = exchange.getIn().getHeader("param1", String.class);
        String param2 = exchange.getIn().getHeader("param2", String.class);
        String param3 = exchange.getIn().getHeader("param3", String.class);

        // Construct JSON response with parameters formatted as "param1/param2/param3"
        Map<String, String> jsonResponse = new HashMap<>();
        jsonResponse.put("ProcessedParams", param1 + "/" + param2 + "/" + param3);

        try {
            // Convert Java object to JSON string using Jackson
            ObjectMapper objectMapper = new ObjectMapper();
            String jsonString = objectMapper.writeValueAsString(jsonResponse);

            exchange.getMessage().setBody(jsonString);
            exchange.getMessage().setHeader(Exchange.CONTENT_TYPE, "application/json");
        } catch (Exception e) {
            exchange.getMessage().setBody("{\"error\":\"Failed to process request\"}");
        }
    }
}

